inputs:
  chat_history:
    type: list
    is_chat_input: false
    is_chat_history: true
  question:
    type: string
    is_chat_input: true
  customerId:
    type: int
    is_chat_input: false
outputs:
  answer:
    type: string
    reference: ${chat.output}
    evaluation_only: false
    is_chat_output: true
nodes:
- name: products
  type: python
  source:
    type: package
    tool: promptflow_vectordb.tool.common_index_lookup.search
  inputs:
    mlindex_content: "embeddings:\n  api_base: https://nh-aoai-canada.openai.azure.com/\n  api_type: Azure\n  api_version: 2023-07-01-preview\n  batch_size: '16'\n  connection:\n    id: \n      /subscriptions/0a7cca23-9daf-45df-8429-20321cce9d90/resourceGroups/rg-niheiai/providers/Microsoft.MachineLearningServices/workspaces/nhtest1/connections/Default_AzureOpenAI\n  connection_type: workspace_connection\n  deployment: text-embedding-ada-002\n  dimension: 1536\n  file_format_version: '2'\n  kind: open_ai\n  model: text-embedding-ada-002\n  schema_version: '2'\nindex:\n  api_version: 2023-07-01-preview\n  connection:\n    id: \n      /subscriptions/0a7cca23-9daf-45df-8429-20321cce9d90/resourceGroups/rg-niheiai/providers/Microsoft.MachineLearningServices/workspaces/nhtest1/connections/AzureAISearch\n  connection_type: workspace_connection\n  endpoint: https://nhaoaicogsearch.search.windows.net\n  engine: azure-sdk\n  field_mapping:\n    content: content\n    embedding: contentVector\n    filename: filepath\n    metadata: meta_json_string\n    title: title\n    url: url\n  index: contosotxt\n  kind: acs\n  semantic_configuration_name: azureml-default\nself:\n  path: \n    azureml://subscriptions/0a7cca23-9daf-45df-8429-20321cce9d90/resourcegroups/rg-niheiai/workspaces/nhtest1/datastores/workspaceblobstore/paths/azureml/49a8308f-d0a6-4936-866b-89b8b5ae485f/index/\n  asset_id: \n    azureml://locations/eastus/workspaces/9bb59072-5add-4b1d-b3c9-8fcfd967757d/data/contosotxt/versions/1\n"
    queries: "${inputs.question}"
    query_type: "Hybrid (vector + keyword)"
    top_k: 3
  aggregation: false
- name: customer
  type: python
  source:
    type: code
    path: customer.py
  inputs:
    customerId: "${inputs.customerId}"
  aggregation: false
- name: prompt
  type: prompt
  source:
    type: code
    path: prompt.jinja2
  inputs:
    customerresponse: "${customer.output}"
    documentation: "${products.output}"
    history: "${inputs.chat_history}"
  aggregation: false
- name: chat
  type: llm
  source:
    type: code
    path: chat.jinja2
  inputs:
    deployment_name: "gpt-35-turbo-16k"
    temperature: 0.7
    top_p: 1
    max_tokens: 256
    presence_penalty: 0
    frequency_penalty: 0
    prompt_text: "${prompt.output}"
    question: "${inputs.question}"
  api: chat
  provider: AzureOpenAI
  connection: Default_AzureOpenAI
  module: promptflow.tools.aoai
  aggregation: false
environment:
  python_requirements_txt: requirements.txt
